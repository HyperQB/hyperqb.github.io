MODULE main
VAR
    -- original globals
	-- use two modules to perform async-composition
	SCHEDULE: 0..1; -- 0:p1 moves, 1:p2 moves
	ID_one: 0..1;
	ID_two: 0..1;
    LOCKED   : boolean;
    in_HIGH  : boolean;

    -- flattened program instances
    proc1.line : 1..5;
    proc2.line : 6..11;

ASSIGN
    init(SCHEDULE) := 0;
    next(SCHEDULE) := 0;

    init(in_HIGH) := {TRUE, FALSE};
    next(in_HIGH) := in_HIGH;

	init(ID_one) := 0;
	next(ID_one) := 0;
	init(ID_two) := 1;
	next(ID_two) := 1;

    init(LOCKED):= FALSE;
    next(LOCKED) :=
        case
            (proc1.line=2): TRUE;
            (proc1.line=5): FALSE;
            (proc2.line=9): TRUE;
            (proc2.line=10): FALSE;
            TRUE: LOCKED;
        esac;

    ----------------------------------------------------------------
    -- proc1 instance (ID_one, initial line = 1)
    ----------------------------------------------------------------
    init(proc1.line) := 1;

    next(proc1.line) := 1;
    ----------------------------------------------------------------
    -- proc2 instance (ID_two, initline = 6)
    ----------------------------------------------------------------
    init(proc2.line) := 6;

    next(proc2.line) := 6;

	DEFINE
        obs_printA := (proc1.line=3);
		obs_printB := (proc1.line=4);
		obs_printC := (proc2.line=6);
		obs_printD := (proc2.line=11);

		-- halting condition
		halt := ((proc1.line=5) & (proc2.line=11));
	